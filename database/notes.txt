TODO

skróty klawiszowe w pycharm / vs code dodać jako markdown do tego repo (albo osobne ?)

macos skróty klawiszowe na makrony ?

"wierzyć" nie zwraca "myśleć, wierzyć, sądzić" - pewnie kiepsko działa, jak jest wiele słów ? albo większa liczba synonimów albo niech patrzy na każde słowo z osobna kiedy jest kilka oddzielonych przecinkami ?

"ropa rana" nie podpowiada "ropa itp. wypływająca z rany lub wrzodu"

"wyrażać" nie podpowiada "wymawiać, wyrażać"

"głosić" nie zwraca rozgłaszać ale "chwalić" już tak

reversed translation:
* wyliczać podobieństwo skojarzeń
* próg na podobieństwo zastosować
* jeśli wpisane słowo 100% pokrywa się z którąś z sugestii automatycznie je uznać (i powiedzieć o tym)
* to samo jeśli tylko jedno pasuje (przy zastosowaniu progu)

dodać ćwiczenia na pozostałe formy, w tym nieodmienne:
inf, part, gerundium
dodać widok agregujący ćwiczenia ?

ćwiczenie odwrotne do declension / conjugation - słowo i jakie to formy (reversed declension, reversed conjugation)

czemu migration po reversed_translation nie dziala ?

zrobić ćwiczenie dla word_comparison ?

złe wyliczanie skuteczności ćwiczeń ? ind pres act 94 a nie 100%

nowy typ ćw. (ograniczony):
* nie ma sensu pytać o wszystkie formy, bo w wielu przypadkach liczne formy wynikają z tej samej zasady
* a więc: opisywać reguły i pytać o przykłady (po jednym) - wtedy ćwiczenia będą krótkie i równie owocne, a do tego da to impuls do zwerbalizowania reguł
* prolog ? haskell ?
* opisywać relacje, napisać generator form na podstawie reguł i sprawdzić czy są poprawne
* wtedy będzie można też generować inne ?
* dodać wtedy esse

english scrape'ing - playwright (python)

dodać opcje 'revise' do conjugation i declension (translation juz ma)
revise mogłoby działać inaczej niż teraz w translation - dla zadanego zakresu (filtry) pobiera tylko te, ktore w ostatniej sesji byly bledne (nie w ostatniej sesji w ogole, ale w ostatniej sesji dla danego slowa)

dodać opcje 'continue' do conjugation, declension i translation

wrzucić do osobnych sekcji: "przypadek, z którym się łączy". tylko przypadek przynależy do kombinacji "słowo/tłumaczenie"
do tego tłumaczenie powinno być przypisane do części mowy (uwzględnić to w bazie)

dodac opcje powrotu do przerwanego cwiczenia - do tego najlepiej by trzymac stan sesji w bazie - chociaz z pliku tez by sie dalo. ale co gdyby slownik w miedzyczasie sie zmienil ?

jeśli nie da się czegoś zescrape'owć to trzeba i w apce i do pliku wyrzucać info o tym - ale nie wrzucać tego do słownika poprzez "add" to dictionary. 
może po prostu dodać sekcję "cannot scrape" jako trzecią ?

jeśli jest forma bierna od danego słowa to wyszukiwać i scrape'ować to słowo, a nie formę bierną (np. iussu)

stworzyć listę słów niewyrzucanych przez scrape (np. sum, et)

pl tantum źle się scrape'uje:
pauci, – [noun] [p] [II]

dodać apkę webową (albo zakładkę do lang-learning) do angielskiego
moze z linkami do cambridge dict ?
teraz dodawanie zdan nie zawsze dziala dobrze - patrz coronary
i niech idzie do osobnego scraping_out nie tego samego co lacina

dodać infinitivus do odmian - praes act/pass, perf act/pass, fut act/pass

migracja wszystkich prepositions tak żeby było w bazie "associated case" - może zamienić nawiasy okrągłe na kwadratowe ?
czy "ex - były, dawny" to jest przyimek ?

łączyć ze sobą słowa - synonimy, ale też antonimy.
może bielik byłby do tego lepszy skoro to po polsku ?
potem urozmaicać ćwiczenia - np. po odpytaniu o słowo odpytać o synonim/antonim

dodawać do słownika luźne (a może nie tak luźne ?) notatki nt. słów. raz, że w csv, dwa że w tabelach ? przykładem może być "dico". 
notatki z chatagpt, przykładowe zdania, uwagi nt. konstrukcji
dodać do csv np. nawiasy "{}" jako uwagi, notatki i odpowiednią kolumnę w tabeli. potem można by to sformalizować, mieć np. sekcje "konstrukcja", "przykłady", "porównanie z innymi słowami" itp. (patrz "dico" w "latin notes.txt") 
czy odpytując API można mieć kontekst projektu z aplikacji chatgpt ?

czasem synonimy dzialaja kiepsko (np 'widowisko'). uzyc LLM ?

moze chatgpt do tlumaczen ? moze jedno i drugie i mozna wybrac ? wydaja sie duzo lepsze niz ze slownika i wiele dodatkowych informacji

i declension, conjugation - cwiczenie odwrotne. bedzie prosciej ale tez jest kilka mozliwych odpowiedzi

w wyszukiwaniu synonimow sprawic, zeby zgadzal sie zawsze rodzaj slowa (czesc mowy)
trzeba bedzie tlumaczeniom przypisac czesci mowy. czy jedno moze miec wiele ?

dodac opcje komentarza do slow lub zdań lub tłumaczeń w słowniku - np. atque, ac

english wymaga poprawy - zawsze powinna byc bazowa forma. patrz:
(These universities have the most \retracted\ scientific articles) [Nature on FB]
powinno dac retract jako slowo nie retracted
dodac kontekst zdania do prompta jesli nie ma
nie powinien dawac zadnych komentarzy w stylu "If you need more information or have another word in mind, feel free to ask!"

do scrape'owania (web) mozliwosc dodania wielu zdan - wtedy iteracja po zdaniu i doklejanie do wyniku - a moze sekcje scraped i found zbiorcze a tylko example rozbijac ?

do aplikacji (web) dodac slownik i tabelki z widokami

odfiltrowywać ze wyników scrape hasła, które mają "strona bierna", "miesłów bierny" ? do zastanowienia

napisać scraper w haskellu
* przetestować go na całym słowniku
* trzymać więcej metadanych i zrozumieć ich znaczenie, np. intransitive verb, semi-deponent
* może nie ma to sensu skoro chatgpt bardzo dobrze to podsumowuje

jak obsłużyć coś takiego teraz w słowniku ?
gaudĕo, gaudēre, gavisus –a –um sum, gavisum [verb] [II]
(Amicum meum Varsoviam iam esse gaudeo)
1. cieszyć się, radować się

w pierwszej wersji podawac pelna forme slownikowa do tlumaczenia. w kolejnej byc moze dowolno forme, albo forme wzieta z przykladow i pytac tez o to, jaka jest podstawowa forma slownikowa. a docelowo jeszcze byc moze jaka to jest forma podana

opcja kontynuacji poprzedniej sesji w cwiczeniach

dodac do odmian esse

optymalizacja cwiczen z conjugation  - jedno slowo i stosunkowo male zmiany, tzn. w miare mozliwosci tylko jedna rzecz na raz. 
czasem moze byc ciezko wiec moze podobienstwa form i wtedy losowanie wg prawdopodobienstw 
moglaby to byc flaga w istniejacym cwiczeniu

cwiczenie odwrocone - np. "res" i wypisz wszystkie formy jakie to mogą byc (jakas podpowiedz ile...)
to samo w conjugation 

ogolnie w przypadku wpisania zlej formy info zwrotne nt. tego, jaka to jest forma
potem moze sie przydac do raportow co z czym pomylone (wrzucic taka tabele na baze)

uzywac llmow do domyslania sie argumentow ? zeby nie musiec wpisywac wszystkich wartosci np. w declension classes enum linijka ok 47

cwiczenia dla przyimków, zaimków, przysłówków i spójników:
wypisanie (dla danej kategorii) wszystkich polskich tłumaczeń
podanie łacińskiego słowa
trzeba odpowiedzieć podając przypadek (jeśli ma zastosowanie) oraz tłumaczenie (znane z listy)
tłumaczeń może być wiele - uwzględnić to i powiedzieć, ile trzeba podać (może być wtedy z różnymi przypadkami)
... wlasciwie to samo tez z rzeczownikami i czasownikami. i z tlumaczeniami. mozna by miec cala baze slow z odmianami, nie tylko same slowa. wtedy cwiczenia bylyby bardziej zaawansowane (np. slowo po lacinie -> jakie to tlumaczenie, jakie forma)
takie scrape'owanie mozna by zrobic w haskellu
scrape najlepiej z dwoch zrodel zeby porownac czy jest tak samo i wykluczyc bledy
moze llm do sprawdzenia ?

wydruk wszystkich zaimkow, przyimkow, przyslowkow i spojnikow ze slownika 

zaimki więcej informacji
https://latinaomnibus.pl/index.php?dzial=czesci_mowy&opcja=zaimek#pyt_wzgl

example powinno byc do translation

translation last session hard words wyswietlac jako podsumowanie na koniec cwiczenia

cwiczenie: top N z nextToBeAsked

wyswietlac na poczatku cwiczenia declension wyswietlac podsumowanie kiedy sie stosuje dana deklinacje (trzymac to tez docelowo na bazie ?) - przynajmniej przy wyborze deklinacji (nie slow)

gdyby kazde slowo w tekscie moc traktowac jako link - do tlumaczenia, moze tez do odmiany ? znow baza grafowa 

w cwiczeniach np. declension dawac przyklady (czy tylko jak jest zla odpowiedz ?)

w bazie grafowej powinno byc info o koncowkach. znajdywac relacje w stylu "te deklinacje maja podobny schemat bo i tu i tu nom sing jest taki sam jak nom pl"

w declension (tez gdzies indziej ?) jesli ktos poda zla odpowiedz to mowic do czego to pasuje - co z czym jest mylone

reconciliation between text and json representations

langchain finding synonyms

majac pryzklad powinno dac sie przeklikac kazde uzyte w nim slowo ktore jest w slowniku. w neo4j powinno sie dac (trzeba wziac pod uwage ze sa rozne formy)

skrypt do dodawania slow ze schowka (tzn. plik txt, nie clipboard) do slownika - ma sens jak ma byc baza

mongodb, neo4j

dodac graficzne powiazania regul gramatycznych - na przyklad koncowki odmian

dodac przyklady (zdania) do grammatical patterns

dodac opcje wypisania danej odmiany. moze LLM na podstawie jsona ?

english - można by dodawać kontekst zdania żeby wybierał najlepsze tlumaczenia
dodawać też polskie tłumaczenia
bardziej złożona struktura - patrz mongodb
zapisywanie rowniez fonetyki tak zeby potem mozna bylo wymowic slowo (siri, chatgpt)

czy na podstawie dokumentacji i metadanych np. schematu bazy LLM moglby wywolywac odpowiednie skrypty na podstawie jezyka naturalnego ? albo pisac kod... np. "chcialbym przecwiczyc czwarta deklinacje lacinska" albo "chcialbym przecwiczyc ten zaimek, ktory mi idzie najgorzej..."

przemyśleć użycie mongoDB

dawac tez date dodania slowa

wydzielic osobne repo na parsowanie i napisac je w haskellu ?
i jeszcze osobne repo na przechowywanie formatu wspolnych danych - np. yaml ze struktura slownika

skrot do find_or_scrape z mozliwoscia sterowania czy tylko find tylko scrape czy to lub to czy jedno i drugie

dokonczyc replace_special (teraz dziala dobrze jak sie zacznie od head ale bez tego sie zawiesza)

summary of all exerices - dates, scores

wydruk slow - po typach (np. adv, conjunction), po najnizszych score'ach

napisac parser do latin online dictionary w bazujac na prompcie w stylu english.py tego co jest w english.py
co zrobic zeby wylapywac potencjalne bledy ? moze kilka roznych zapytan w rozny sposob, z roznych zrodel i sprawdzac zgodnosc ?

stworzyc skrypt do zamiany w locie wszystkih specjalnych znakow na normalne ? wtedy mozna by uzywac np. grepa

przemyslec opcje do przymiotnikow

dodac opcje 'top' do translation i branie z widoku

jesli wpisane slowo pasuje do czegos innego w slowniku dac taki feedback. zapisac tez w 'results' (nowa kolumna)

nie dawac w logach migration info o kazdym widoku z osobna

wywalic interrupted i w ogole session metadata ?

dodac do declension brakujace rzeczy

czy na pewno zbierać sesje interrupted ?

dla kazdego cwiczenia (trans / conj / decl) dodac opcje "sugerowane" ktore uruchamia cwiczenie z opcjami wg prostej logiki:
np. w translatoin revision jesli nie bylo dzisiaj albo ostatni rozdzial
w conj/decl wg widoku last exercise itp.

przed uruchomieniem kazdego cwiczenia powinno byc zrobione migration - skoro dane sa pobierane z bazy

opcja powtorzenia sesji rowniez dla declension / conjugation

cwiczenie odwrotne do declension / conjugation - slowo i jaka to forma (/formy). bedzie latwiej niz w translation

dodac podsumowanie do koncowki sesji - albo uruchamiane automatycznie albo jako osobny skrypt (jakie slowa sie nie udaly, co znacza). albo po prostu zmienić widok ?

czy daloby sie wyciagnac wszystkie slowa ze skanow/zdj podrecznika ?

revision w translation powinno zawierac problematyczne tlumaczenia a nie slowa

dodac opcje filtrowania w translation po rozdzialach (definiowanyh recznie, np. z podrecznika, ale moze byc dowolnie - mapowanie nazwy rozdzialu na start/end word)

cwiczenie z tlumaczeniem slow lacinskiech na polskie - przemyslec jak. llm ? prosta wyszukiwarka i wybor ?

do results dodac jeszcze info o liczbie slow i score ? raczej jakies widoki/dashboard

skrot do adjective - np. '2' to dwie koncowki. a '1' to jedna
dodac skroty do readme oraz wypisac na poczatku cwiczenia

wygenerowac jakies podsumowanie koncowek perf/sup - czy jest tu jakas regula ? ale najpierw obsluzyc wystepowanie alternatywnych form (uzupelnic slownik)

dodac bardziej szczegolowe info o tym co zostalo pomylone - np. tylko jedna forma (w przyszlosci rowniez na bazie w raportach, na poczatek moze byc w terminalu)
w raportach tez info o tym co z czym najczesciej jest mylone

opcja uruchamiania w translation exercise konkretnych lekcji/czytanek. moze to powinien byc podstawowy sposob grupowania a nie slowa -a/z

jesli w cwiczeniu jest tylko jeden tryb/strona itd. można ich nie podawac bo to tylko utrudnia odczytywanie

cwiczenie: slowo i podac jego forme
zarowno deklinacje/koniugacje jak i translation

douczanie LLM na danych z bazy

zle parsowanie ? ostendo  ostendere  ostendi  ostentum[verb] (bez spacji)

tranlation exercise - opcja na top n slow. losowanie z widoku translation_next_to_be_asked

dodac usprawnienia w translation dla przymiotnikow np. proconsularis
przy starcie aplikacji wyswietlic reguly

zawracac info o liczbie slow co 10 prob nie co 10 dobrych odpowiedzi (albo to i to - zwlaszcza w translation)

dodac aliasy do find or scrape i scrape dla terminala

dodac brakujace odmiany - np. nullus, idem..

declension/conjugation_exercise.py powinno na biezaco wrzucac dane do bazy (teraz tylko przy migracji)
add script with reports to be used from terminal (summary)
better help on -h with terminal

dodawac przyklady zdan do odmian

w declension/conjugation_exercise.py nie ma sensu pytać o nom sing

obsluga przypadkow, gdy jest wiecej niz jedna poprawna forma np. perf lub sup. patrz revello. sprawdzic wstecz ?
kolejny przyklad: to ăb (ā, ābs, aps) [prep]
ostendo, ostendĕre, ostendi, ostentum o ostensum [verb] [III]

z poziomu konsoli odpytywac o tabelki odmian. dodac jakis skrot o co mozna pytac

wyswietlac podsumowanie na koniec sesji - o ile zostala doprowadzona do konca

dodawac do bazy session metadata

w przypadku bledu jesli podalo sie inna forme mozna podpowiadac - z czym sie pomylilo

czy daloby sie podpiac uzupelnianie glosowe ?

scrape'owanie tez przez konsole
ogolnie uzycie z poziomu konsoli ale dane w bazie

uaktualnić checklistę. notatki w pliku i na kartce połączyć
do funkcji przypadkow dopisac przyklady

losowanie ze wszystkich przykladow slow zeby podac ich formy. ale skad beda znane ? scrape calego slownika..

do sesji powinno sie tez logowac startowe argumenty

w tabeli translation_results is_correct jest stringiem pisanym czasem duza czasem mala litera. poprawic na boolean (i widoki!)

dodac do notatek
wytlumaczenie czesci mowy (zaimek, przyimek, przyslowek) i zdania (okolicznik itp)
https://lacina.globalnie.com.pl/przyimki-lacinskie/
https://lacina.globalnie.com.pl/zaimki-wskazujace-lacina/
dodać zawartość 'latin notes.txt'
https://lacina.globalnie.com.pl/funkcje-przypadkow-lacina/
porownac z plskimi https://polszczyzna.pl/przypadki-w-jezyku-polskim/

ulepszenie scrape'owania:
jesli jakies slowo zawiera na koncu "que" i nie daje sie znalezc sprobowac to samo bez "que" (albo zawsze probowac ?)
dodac slowa, ktorych sie nie scarepuje np.: et, ego, non
nie wyswietlac slow w stylu:
sŏlĕo, sŏlēre, solitus, –a, –um  sum (strona bierna od ...)
oraz
hăbens, hăbens, hăbens [adj]
()
1. present participe of [habeo]

sprawdzic czy uda sie dodac to:
-, verberis [noun] [n] [anomalous]
(Ego ab illo iniquis et cotidianis verberibus ad fugam sum coactus et in camporum et arenarum solitudines concessi)
1. bicz
2. chłosta, bicie

dodac czyszczenie konsoli przy start/finish

dodac opcjonalne notatki do slow (w bazie i pliku)
patrz drugie tlumaczenie do "concessi"

dark mode w aplikacji web

podpiecie chatgpt o1 pod intellij ?

dodac do rules odmiany, m.in.
https://lacina.globalnie.com.pl/zaimki-wskazujace-lacina/

scrape - zaimki (pronoun) zwracaja tylko jedna forme, zamiast trzech (np. ille/illa/illud)

dodac opcje sprawdzania formy danego slowa - tez scrape czy pobieranie bazy do siebie ?
moze to drugie bo zrodlem moglaby byc wiecej niz jedna strona

rozklad zdan. porownanie z llm

ogolnie podpiecie llm do bazy/pliku tekstowego

dodawac linki do zesrape'owanych slow ?

dodawac do scrape wyjatki: np. ego, et, sum (najlepiej po scrapie, zeby uwzglednic wszystkie formy)
można by też patrzeć na inne tabele, jak powstaną (np. deklinacji zaimków, odmian czasowników nieregularnych)

dodac do scrape opcje 'force' jak w skrypcie (np. checkbox)

scrape trzeba poprawic - verberibus parsuje zle (nie ma formy nom. sing a ja podaje!)

zastanowic sie nad wykorzystaniem llm - np. do sprawdzania poprawnosci ? na ile mozna mu ufac ?

opcja dla widoku slownika - wyswietlic wszystkie slowa w jakims zdaniu
moze rowniez podczas przegladania wynikow scrapeowania (symulacja) ?

dodac tlumaczenia przykladow ?
mozna by zaczac od "Ego ab illo iniquis et cotidianis verberibus ad fugam sum coactus et in camporum et arenarum solitudines concessi"

w translation trzeba bedzie umiec obslugiwac rozne formy - patrz np. "ăb (ā, ābs, aps) [prep]"

niektore slowa sa scrape'owane dwa razy: patrz cessi, remotum

dodawać info też o tym, czego nie udało się zescrape'ować

zastanowić się nad czymś a la jira - np. youtrack ?

translation_exercise - z bazy
dorobic inne exercise - zarowno baza jak i plik. dodac migracje
wyswietlic caly slownik z filtrami
dodac tabele odmian

translation musi by brane z bazy a nie z pliku - wiele tlumaczen moze byc poprawnych
mozliwosc podawania wiecej niz jednego tlumaczenia. jak to obsluzyc ? co jesli sa dwa a poda sie jedno ? usunac je z listy ?
wtedy za drugim razem jest juz tylko jedno a mialo tak nie byc....

btw. obecne translation results moze byc przez to niepoprawne - da sie to jeszcze poprawic
ale przez zastosowanie skrótów (w stylu 'vaco 1' moze to byc trudne - nie ma sensu)

przy starcie aplikacji dodac finish na wszystkich cwiczeniach

dodac skroty do nawigacji - cyfry albo litery

w scraped results zwracac tez info o not found, cannot parsed etc.

gdyby do kazdego slowa w slowniku trzymac cala odmiane pomogloby to wyszukiwaniu

w przyszlosci mozna by do zdania wypisywac wszystkie formy
i odpytywac od rozne formy
dla danego slowa zwracac jaka to forma

dokonczyc next to be asked - chociaz moze nie ma sensu definiowac widoku bo to trzeba wyliczac w locie pod zastosowaniu filtra

migracja associated case

word_pl nie jest unikalne - ale to powinno byc ok.. ?
przemyslec to, ze jedno slowo moze miec wiele tlumaczen, i jedno tlumaczenie moze miec wiele slow

do przymiotnikow dodac info o typie (I/II czy III koniugacja, ilosc zakonczen (1/2/3)) - moze sie przydac do statystyk ?
